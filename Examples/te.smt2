(set-option :print-success true)
(set-logic QF_NIA)
(set-option :produce-models true)
(declare-fun x11 () Int)
(declare-fun x12 () Int)
(declare-fun x13 () Int)
(declare-fun x14 () Int)
(declare-fun x21 () Int)
(declare-fun x22 () Int)
(declare-fun x23 () Int)
(declare-fun x24 () Int)
(declare-fun x31 () Int)
(declare-fun x32 () Int)
(declare-fun x33 () Int)
(declare-fun x34 () Int)
(declare-fun x41 () Int)
(declare-fun x42 () Int)
(declare-fun x43 () Int)
(declare-fun x44 () Int)
(assert (distinct x11 x12 x13 x14))
(assert (distinct x21 x22 x23 x24))
(assert (distinct x31 x32 x33 x34))
(assert (distinct x41 x42 x43 x44))
(assert (distinct x11 x21 x31 x41))
(assert (distinct x12 x22 x32 x42))
(assert (distinct x13 x23 x33 x43))
(assert (distinct x14 x24 x34 x44))
(assert (distinct x11 x12 x21 x22))
(assert (distinct x13 x14 x23 x24))
(assert (distinct x31 x32 x41 x42))
(assert (distinct x33 x34 x43 x44))
(assert (< 0 x11))
(assert (< 0 x12))
(assert (< 0 x13))
(assert (< 0 x14))
(assert (< 0 x21))
(assert (< 0 x22))
(assert (< 0 x23))
(assert (< 0 x24))
(assert (< 0 x31))
(assert (< 0 x32))
(assert (< 0 x33))
(assert (< 0 x34))
(assert (< 0 x41))
(assert (< 0 x42))
(assert (< 0 x43))
(assert (< 0 x44))
(assert (>= 4 x11))
(assert (>= 4 x12))
(assert (>= 4 x13))
(assert (>= 4 x14))
(assert (>= 4 x21))
(assert (>= 4 x22))
(assert (>= 4 x23))
(assert (>= 4 x24))
(assert (>= 4 x31))
(assert (>= 4 x32))
(assert (>= 4 x33))
(assert (>= 4 x34))
(assert (>= 4 x41))
(assert (>= 4 x42))
(assert (>= 4 x43))
(assert (>= 4 x44))
(check-sat)
(get-value (x11 x12 x13 x14 x21 x22 x23 x24 x31 x32 x33 x34 x41 x42
            x43 x44))
(exit)
