(set-logic QF_AUFBV)
(set-info :source |
Count bits pop(x) algorithm, table lookup method
From the book "Hacker's delight" by Henry S. Warren, Jr., page 71
The algorithm precomputes pop(x) for x in range 0 to 255 and stores it
into a lookup table.

We cross-check it with the obvious method of counting bits:
for (s = i = 0; i < BW; i++)
  if (x & (1 << i))
    s++;

Contributed by Robert Brummayer (robert.brummayer@gmail.com)
|)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun x () (_ BitVec 8))
(declare-fun a1 () (Array (_ BitVec 8) (_ BitVec 8)))
(assert (let ((?v_0 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv0 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd (_ bv0 8) (_ bv1 8)) (_ bv0 8)))) (let ((?v_1 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv1 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_0 (_ bv1 8)) ?v_0))) (let ((?v_2 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv2 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_1 (_ bv1 8)) ?v_1))) (let ((?v_3 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv3 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_2 (_ bv1 8)) ?v_2))) (let ((?v_4 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv4 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_3 (_ bv1 8)) ?v_3))) (let ((?v_5 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv5 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_4 (_ bv1 8)) ?v_4))) (let ((?v_6 (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv6 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_5 (_ bv1 8)) ?v_5))) (not (= (bvnot (ite (= (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store a1 (_ bv0 8) (_ bv0 8)) (_ bv1 8) (_ bv1 8)) (_ bv2 8) (_ bv1 8)) (_ bv3 8) (_ bv2 8)) (_ bv4 8) (_ bv1 8)) (_ bv5 8) (_ bv2 8)) (_ bv6 8) (_ bv2 8)) (_ bv7 8) (_ bv3 8)) (_ bv8 8) (_ bv1 8)) (_ bv9 8) (_ bv2 8)) (_ bv10 8) (_ bv2 8)) (_ bv11 8) (_ bv3 8)) (_ bv12 8) (_ bv2 8)) (_ bv13 8) (_ bv3 8)) (_ bv14 8) (_ bv3 8)) (_ bv15 8) (_ bv4 8)) (_ bv16 8) (_ bv1 8)) (_ bv17 8) (_ bv2 8)) (_ bv18 8) (_ bv2 8)) (_ bv19 8) (_ bv3 8)) (_ bv20 8) (_ bv2 8)) (_ bv21 8) (_ bv3 8)) (_ bv22 8) (_ bv3 8)) (_ bv23 8) (_ bv4 8)) (_ bv24 8) (_ bv2 8)) (_ bv25 8) (_ bv3 8)) (_ bv26 8) (_ bv3 8)) (_ bv27 8) (_ bv4 8)) (_ bv28 8) (_ bv3 8)) (_ bv29 8) (_ bv4 8)) (_ bv30 8) (_ bv4 8)) (_ bv31 8) (_ bv5 8)) (_ bv32 8) (_ bv1 8)) (_ bv33 8) (_ bv2 8)) (_ bv34 8) (_ bv2 8)) (_ bv35 8) (_ bv3 8)) (_ bv36 8) (_ bv2 8)) (_ bv37 8) (_ bv3 8)) (_ bv38 8) (_ bv3 8)) (_ bv39 8) (_ bv4 8)) (_ bv40 8) (_ bv2 8)) (_ bv41 8) (_ bv3 8)) (_ bv42 8) (_ bv3 8)) (_ bv43 8) (_ bv4 8)) (_ bv44 8) (_ bv3 8)) (_ bv45 8) (_ bv4 8)) (_ bv46 8) (_ bv4 8)) (_ bv47 8) (_ bv5 8)) (_ bv48 8) (_ bv2 8)) (_ bv49 8) (_ bv3 8)) (_ bv50 8) (_ bv3 8)) (_ bv51 8) (_ bv4 8)) (_ bv52 8) (_ bv3 8)) (_ bv53 8) (_ bv4 8)) (_ bv54 8) (_ bv4 8)) (_ bv55 8) (_ bv5 8)) (_ bv56 8) (_ bv3 8)) (_ bv57 8) (_ bv4 8)) (_ bv58 8) (_ bv4 8)) (_ bv59 8) (_ bv5 8)) (_ bv60 8) (_ bv4 8)) (_ bv61 8) (_ bv5 8)) (_ bv62 8) (_ bv5 8)) (_ bv63 8) (_ bv6 8)) (_ bv64 8) (_ bv1 8)) (_ bv65 8) (_ bv2 8)) (_ bv66 8) (_ bv2 8)) (_ bv67 8) (_ bv3 8)) (_ bv68 8) (_ bv2 8)) (_ bv69 8) (_ bv3 8)) (_ bv70 8) (_ bv3 8)) (_ bv71 8) (_ bv4 8)) (_ bv72 8) (_ bv2 8)) (_ bv73 8) (_ bv3 8)) (_ bv74 8) (_ bv3 8)) (_ bv75 8) (_ bv4 8)) (_ bv76 8) (_ bv3 8)) (_ bv77 8) (_ bv4 8)) (_ bv78 8) (_ bv4 8)) (_ bv79 8) (_ bv5 8)) (_ bv80 8) (_ bv2 8)) (_ bv81 8) (_ bv3 8)) (_ bv82 8) (_ bv3 8)) (_ bv83 8) (_ bv4 8)) (_ bv84 8) (_ bv3 8)) (_ bv85 8) (_ bv4 8)) (_ bv86 8) (_ bv4 8)) (_ bv87 8) (_ bv5 8)) (_ bv88 8) (_ bv3 8)) (_ bv89 8) (_ bv4 8)) (_ bv90 8) (_ bv4 8)) (_ bv91 8) (_ bv5 8)) (_ bv92 8) (_ bv4 8)) (_ bv93 8) (_ bv5 8)) (_ bv94 8) (_ bv5 8)) (_ bv95 8) (_ bv6 8)) (_ bv96 8) (_ bv2 8)) (_ bv97 8) (_ bv3 8)) (_ bv98 8) (_ bv3 8)) (_ bv99 8) (_ bv4 8)) (_ bv100 8) (_ bv3 8)) (_ bv101 8) (_ bv4 8)) (_ bv102 8) (_ bv4 8)) (_ bv103 8) (_ bv5 8)) (_ bv104 8) (_ bv3 8)) (_ bv105 8) (_ bv4 8)) (_ bv106 8) (_ bv4 8)) (_ bv107 8) (_ bv5 8)) (_ bv108 8) (_ bv4 8)) (_ bv109 8) (_ bv5 8)) (_ bv110 8) (_ bv5 8)) (_ bv111 8) (_ bv6 8)) (_ bv112 8) (_ bv3 8)) (_ bv113 8) (_ bv4 8)) (_ bv114 8) (_ bv4 8)) (_ bv115 8) (_ bv5 8)) (_ bv116 8) (_ bv4 8)) (_ bv117 8) (_ bv5 8)) (_ bv118 8) (_ bv5 8)) (_ bv119 8) (_ bv6 8)) (_ bv120 8) (_ bv4 8)) (_ bv121 8) (_ bv5 8)) (_ bv122 8) (_ bv5 8)) (_ bv123 8) (_ bv6 8)) (_ bv124 8) (_ bv5 8)) (_ bv125 8) (_ bv6 8)) (_ bv126 8) (_ bv6 8)) (_ bv127 8) (_ bv7 8)) (_ bv128 8) (_ bv1 8)) (_ bv129 8) (_ bv2 8)) (_ bv130 8) (_ bv2 8)) (_ bv131 8) (_ bv3 8)) (_ bv132 8) (_ bv2 8)) (_ bv133 8) (_ bv3 8)) (_ bv134 8) (_ bv3 8)) (_ bv135 8) (_ bv4 8)) (_ bv136 8) (_ bv2 8)) (_ bv137 8) (_ bv3 8)) (_ bv138 8) (_ bv3 8)) (_ bv139 8) (_ bv4 8)) (_ bv140 8) (_ bv3 8)) (_ bv141 8) (_ bv4 8)) (_ bv142 8) (_ bv4 8)) (_ bv143 8) (_ bv5 8)) (_ bv144 8) (_ bv2 8)) (_ bv145 8) (_ bv3 8)) (_ bv146 8) (_ bv3 8)) (_ bv147 8) (_ bv4 8)) (_ bv148 8) (_ bv3 8)) (_ bv149 8) (_ bv4 8)) (_ bv150 8) (_ bv4 8)) (_ bv151 8) (_ bv5 8)) (_ bv152 8) (_ bv3 8)) (_ bv153 8) (_ bv4 8)) (_ bv154 8) (_ bv4 8)) (_ bv155 8) (_ bv5 8)) (_ bv156 8) (_ bv4 8)) (_ bv157 8) (_ bv5 8)) (_ bv158 8) (_ bv5 8)) (_ bv159 8) (_ bv6 8)) (_ bv160 8) (_ bv2 8)) (_ bv161 8) (_ bv3 8)) (_ bv162 8) (_ bv3 8)) (_ bv163 8) (_ bv4 8)) (_ bv164 8) (_ bv3 8)) (_ bv165 8) (_ bv4 8)) (_ bv166 8) (_ bv4 8)) (_ bv167 8) (_ bv5 8)) (_ bv168 8) (_ bv3 8)) (_ bv169 8) (_ bv4 8)) (_ bv170 8) (_ bv4 8)) (_ bv171 8) (_ bv5 8)) (_ bv172 8) (_ bv4 8)) (_ bv173 8) (_ bv5 8)) (_ bv174 8) (_ bv5 8)) (_ bv175 8) (_ bv6 8)) (_ bv176 8) (_ bv3 8)) (_ bv177 8) (_ bv4 8)) (_ bv178 8) (_ bv4 8)) (_ bv179 8) (_ bv5 8)) (_ bv180 8) (_ bv4 8)) (_ bv181 8) (_ bv5 8)) (_ bv182 8) (_ bv5 8)) (_ bv183 8) (_ bv6 8)) (_ bv184 8) (_ bv4 8)) (_ bv185 8) (_ bv5 8)) (_ bv186 8) (_ bv5 8)) (_ bv187 8) (_ bv6 8)) (_ bv188 8) (_ bv5 8)) (_ bv189 8) (_ bv6 8)) (_ bv190 8) (_ bv6 8)) (_ bv191 8) (_ bv7 8)) (_ bv192 8) (_ bv2 8)) (_ bv193 8) (_ bv3 8)) (_ bv194 8) (_ bv3 8)) (_ bv195 8) (_ bv4 8)) (_ bv196 8) (_ bv3 8)) (_ bv197 8) (_ bv4 8)) (_ bv198 8) (_ bv4 8)) (_ bv199 8) (_ bv5 8)) (_ bv200 8) (_ bv3 8)) (_ bv201 8) (_ bv4 8)) (_ bv202 8) (_ bv4 8)) (_ bv203 8) (_ bv5 8)) (_ bv204 8) (_ bv4 8)) (_ bv205 8) (_ bv5 8)) (_ bv206 8) (_ bv5 8)) (_ bv207 8) (_ bv6 8)) (_ bv208 8) (_ bv3 8)) (_ bv209 8) (_ bv4 8)) (_ bv210 8) (_ bv4 8)) (_ bv211 8) (_ bv5 8)) (_ bv212 8) (_ bv4 8)) (_ bv213 8) (_ bv5 8)) (_ bv214 8) (_ bv5 8)) (_ bv215 8) (_ bv6 8)) (_ bv216 8) (_ bv4 8)) (_ bv217 8) (_ bv5 8)) (_ bv218 8) (_ bv5 8)) (_ bv219 8) (_ bv6 8)) (_ bv220 8) (_ bv5 8)) (_ bv221 8) (_ bv6 8)) (_ bv222 8) (_ bv6 8)) (_ bv223 8) (_ bv7 8)) (_ bv224 8) (_ bv3 8)) (_ bv225 8) (_ bv4 8)) (_ bv226 8) (_ bv4 8)) (_ bv227 8) (_ bv5 8)) (_ bv228 8) (_ bv4 8)) (_ bv229 8) (_ bv5 8)) (_ bv230 8) (_ bv5 8)) (_ bv231 8) (_ bv6 8)) (_ bv232 8) (_ bv4 8)) (_ bv233 8) (_ bv5 8)) (_ bv234 8) (_ bv5 8)) (_ bv235 8) (_ bv6 8)) (_ bv236 8) (_ bv5 8)) (_ bv237 8) (_ bv6 8)) (_ bv238 8) (_ bv6 8)) (_ bv239 8) (_ bv7 8)) (_ bv240 8) (_ bv4 8)) (_ bv241 8) (_ bv5 8)) (_ bv242 8) (_ bv5 8)) (_ bv243 8) (_ bv6 8)) (_ bv244 8) (_ bv5 8)) (_ bv245 8) (_ bv6 8)) (_ bv246 8) (_ bv6 8)) (_ bv247 8) (_ bv7 8)) (_ bv248 8) (_ bv5 8)) (_ bv249 8) (_ bv6 8)) (_ bv250 8) (_ bv6 8)) (_ bv251 8) (_ bv7 8)) (_ bv252 8) (_ bv6 8)) (_ bv253 8) (_ bv7 8)) (_ bv254 8) (_ bv7 8)) (_ bv255 8) (_ bv8 8)) ((_ extract 7 0) x)) (ite (= (_ bv1 1) (bvnot (ite (= (bvand x (bvshl (_ bv1 8) ((_ zero_extend 5) (_ bv7 3)))) (_ bv0 8)) (_ bv1 1) (_ bv0 1)))) (bvadd ?v_6 (_ bv1 8)) ?v_6)) (_ bv1 1) (_ bv0 1))) (_ bv0 1)))))))))))
(check-sat)
(exit)
